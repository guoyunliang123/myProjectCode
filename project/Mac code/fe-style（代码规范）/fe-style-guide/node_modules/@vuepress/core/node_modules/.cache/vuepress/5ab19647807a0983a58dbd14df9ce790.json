{"remainingRequest":"/Users/sf/Documents/fe-style/fe-style-guide/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/sf/Documents/fe-style/fe-style-guide/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/sf/Documents/fe-style/fe-style-guide/docs/naming.md?vue&type=template&id=ed8f2942&","dependencies":[{"path":"/Users/sf/Documents/fe-style/fe-style-guide/docs/naming.md","mtime":1547105652855},{"path":"/Users/sf/Documents/fe-style/fe-style-guide/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sf/Documents/fe-style/fe-style-guide/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/sf/Documents/fe-style/fe-style-guide/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sf/Documents/fe-style/fe-style-guide/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sf/Documents/fe-style/fe-style-guide/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"命名规范\"><a class=\"header-anchor\" href=\"#命名规范\" aria-hidden=\"true\">#</a> 命名规范</h1>\n<h2 id=\"项目命名\"><a class=\"header-anchor\" href=\"#项目命名\" aria-hidden=\"true\">#</a> 项目命名</h2>\n<ul>\n<li>全部小写</li>\n<li>多单词间以短横线 <strong>-</strong> 分隔</li>\n<li>为跟后端模块名有明显区分, 请以 <strong>fe-</strong> 做前缀</li>\n</ul>\n<p>例: fe-style-guide, fe-cls-business</p>\n<h2 id=\"目录命名\"><a class=\"header-anchor\" href=\"#目录命名\" aria-hidden=\"true\">#</a> 目录命名</h2>\n<h3 id=\"vue常见项目\"><a class=\"header-anchor\" href=\"#vue常见项目\" aria-hidden=\"true\">#</a> Vue常见项目</h3>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>src                                 源码目录\n  |- assets/                           静态资源(图片,公共样式,字体)\n  |- api/                              定义请求接口列表\n  |- components/                       公共组件\n  |- router/                           路由\n  |- store/                            vuex\n      |- modules/                      模块级store(带命名空间)\n          |- app_model.js                  \n      |- index.js                      全局store\n  |- utils/                            公共函数库/http/mixin/plugin/directive\n  |- views/                            视图目录\n      |- layout/                       页面基本layout（header/sider/footer/nav)\n      |- user/\n          |- components/               模块内通用组件(可选)\n            |- UserProfile.vue\n          |- index.vue                 模块默认入口页/index\n          |- UserList.vue              模块另一页/userlist\n      |- customer/\n          |- CustomerDetail.vue        页面级组件\n          |- CustomerList.vue\nstatic/                                静态资源(如favicon.ico)\nmock/                                  Mock数据\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"文件命名\"><a class=\"header-anchor\" href=\"#文件命名\" aria-hidden=\"true\">#</a> 文件命名</h2>\n<h3 id=\"模块文件夹\"><a class=\"header-anchor\" href=\"#模块文件夹\" aria-hidden=\"true\">#</a> 模块文件夹</h3>\n<ul>\n<li>优先使用 <strong>单个</strong> <strong>小写</strong> <strong>名词</strong> 描述对应模块</li>\n</ul>\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre v-pre class=\"language-text\"><code>|- views\n      |- layout/\n      |- user/\n      |- customer/\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"model层-vuex-redux\"><a class=\"header-anchor\" href=\"#model层-vuex-redux\" aria-hidden=\"true\">#</a> model层(vuex, redux)</h3>\n<ul>\n<li>推荐使用 <em>模块名 + _model</em> 的形式<br>\n例: app_model.js, user_model.js</li>\n</ul>\n<h2 id=\"变量命名\"><a class=\"header-anchor\" href=\"#变量命名\" aria-hidden=\"true\">#</a> 变量命名</h2>\n<ul>\n<li>小驼峰</li>\n<li><em>ID</em>, <em>URL</em> 全部大写</li>\n<li>限定词、对仗词首字母大写加在名词后面</li>\n<li>切勿使用保留字</li>\n</ul>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// good</span>\n  <span class=\"token keyword\">let</span> userInfo\n  <span class=\"token keyword\">let</span> customerID\n  <span class=\"token keyword\">let</span> yumURL <span class=\"token operator\">=</span> <span class=\"token string\">'http://delivery.yum.com'</span>\n  <span class=\"token keyword\">let</span> ageMax <span class=\"token operator\">=</span> <span class=\"token number\">99</span>\n  <span class=\"token keyword\">let</span> userListTotal <span class=\"token operator\">=</span> <span class=\"token number\">2222</span>\n  <span class=\"token keyword\">let</span> orderNew\n\n\n<span class=\"token comment\">// bad</span>\n  <span class=\"token keyword\">let</span> pinyin\n  <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">let</span> <span class=\"token keyword\">class</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">let</span> <span class=\"token keyword\">delete</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">let</span> asdf <span class=\"token operator\">=</span> <span class=\"token string\">'zhangsan'</span>\n  <span class=\"token keyword\">let</span> objUser <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> Maxage <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n  <span class=\"token keyword\">let</span> maxAge <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n  <span class=\"token keyword\">let</span> find <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">let</span> item123 <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">let</span> ComputeReSult\n</code></pre>\n<!--beforeend--></div><!--afterend--><div class=\"warning custom-block\"><p class=\"custom-block-title\">关于使用缩写</p>\n<p>如需使用缩写请google确认。例: management shortcut 或 management abbreviation</p>\n</div>\n<h2 id=\"循环中命名\"><a class=\"header-anchor\" href=\"#循环中命名\" aria-hidden=\"true\">#</a> 循环中命名</h2>\n<h3 id=\"单个循环\"><a class=\"header-anchor\" href=\"#单个循环\" aria-hidden=\"true\">#</a> 单个循环</h3>\n<p>可以使用 <em>i, j, k, len, index, item, value, key</em></p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> userList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\nv<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item, index) in userList\"</span>\nv<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(value, key) of userInfo\"</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"嵌套循环\"><a class=\"header-anchor\" href=\"#嵌套循环\" aria-hidden=\"true\">#</a> 嵌套循环</h3>\n<p>请用驼峰\n例如: userItem userIndex scoreItem</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> userIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> userLength <span class=\"token operator\">=</span> userLists<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> scoreIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scoreLength <span class=\"token operator\">=</span> userLists<span class=\"token punctuation\">[</span>userIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scoreLists<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        userLists<span class=\"token punctuation\">[</span>userIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>scoreIndex<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(userItem, userIndex) in userLists\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(scoreItem, scoreIndex) in userItem\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"常量命名\"><a class=\"header-anchor\" href=\"#常量命名\" aria-hidden=\"true\">#</a> 常量命名</h2>\n<ol>\n<li>名词</li>\n<li>全部大写</li>\n<li>多字段下划线连接</li>\n</ol>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">USER_AGE_MAX</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DIALOG_TYPE_TIPS</span> <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"函数\"><a class=\"header-anchor\" href=\"#函数\" aria-hidden=\"true\">#</a> 函数</h2>\n<ol>\n<li>动词+名词组合</li>\n<li>小驼峰</li>\n</ol>\n<h3 id=\"动词的选择\"><a class=\"header-anchor\" href=\"#动词的选择\" aria-hidden=\"true\">#</a> 动词的选择</h3>\n<table>\n<thead>\n<tr>\n<th>动词</th>\n<th>含义</th>\n<th>返回值</th>\n<th>栗子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>is</td>\n<td>是不是</td>\n<td>boolean</td>\n<td>isValid</td>\n</tr>\n<tr>\n<td>has</td>\n<td>有没有</td>\n<td>boolean</td>\n<td>hasChild</td>\n</tr>\n<tr>\n<td>can</td>\n<td>能不能</td>\n<td>boolean</td>\n<td>canUpgrade</td>\n</tr>\n<tr>\n<td>get</td>\n<td>获取值</td>\n<td>返回一个非布尔值</td>\n<td>getUserList</td>\n</tr>\n<tr>\n<td>set</td>\n<td>更新值</td>\n<td>无返回值、返回是否设置成功或者返回链式对象</td>\n<td>setUserAddress</td>\n</tr>\n</tbody>\n</table>\n<p>其他常用动词: init, clear, format, go。建议优先使用上述动词</p>\n<h3 id=\"描述事件\"><a class=\"header-anchor\" href=\"#描述事件\" aria-hidden=\"true\">#</a> 描述事件</h3>\n<p>使用 on+事件描述</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onInputChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onFormSubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onDialogClose</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"后端接口相关\"><a class=\"header-anchor\" href=\"#后端接口相关\" aria-hidden=\"true\">#</a> 后端接口相关</h3>\n<p>新建: createSomething\n修改: updateSomething<br>\n删除: removeSomething<br>\n查询: querySomeData / getSomeData</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getUserList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> service<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/some/url'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPlan</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"vue-相关\"><a class=\"header-anchor\" href=\"#vue-相关\" aria-hidden=\"true\">#</a> Vue 相关</h2>\n<h3 id=\"vue组件命名\"><a class=\"header-anchor\" href=\"#vue组件命名\" aria-hidden=\"true\">#</a> Vue组件命名</h3>\n<p>请首先参考<a href=\"https://cn.vuejs.org/v2/style-guide/index.html#%E7%BB%84%E4%BB%B6%E6%96%87%E4%BB%B6-%E5%BC%BA%E7%83%88%E6%8E%A8%E8%8D%90\" target=\"_blank\" rel=\"noopener noreferrer\">vue官方风格指南<OutboundLink/></a></p>\n<p>组件命名需遵从以下原则:</p>\n<ul>\n<li><strong>有意义</strong>: 不宜过于具体、过于抽象</li>\n<li><strong>简短</strong>: 2-3个单词即可</li>\n<li><strong>可读性强</strong>: 便于沟通和使用</li>\n<li>通用组件可用app-做前缀</li>\n</ul>\n<h4 id=\"一些例子\"><a class=\"header-anchor\" href=\"#一些例子\" aria-hidden=\"true\">#</a> 一些例子</h4>\n<!--beforebegin--><div class=\"language-html extra-class\"><!--afterbegin--><pre v-pre class=\"language-html\"><code><span class=\"token comment\">&lt;!-- good --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>app-header</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>app-header</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>user-list</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>user-list</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>range-slider</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>range-slider</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- bad --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>btn-group</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>btn-group</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- 虽然简短但是可读性稍差. 使用 `button-group` 替代 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ui-slider</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ui-slider</span><span class=\"token punctuation\">></span></span> <span class=\"token comment\">&lt;!-- ui 前缀太过于宽泛，意义不明确 --></span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"views目录\"><a class=\"header-anchor\" href=\"#views目录\" aria-hidden=\"true\">#</a> Views目录</h3>\n<p>views 文件夹下是以由页面为单位的vue文件或者模块文件夹组成的</p>\n<h4 id=\"模块文件夹-2\"><a class=\"header-anchor\" href=\"#模块文件夹-2\" aria-hidden=\"true\">#</a> 模块文件夹</h4>\n<ol>\n<li>小写</li>\n<li>模块名一般由 <strong>名词</strong> 构成</li>\n<li>优先使用 <strong>一个</strong> 单词表达模块</li>\n<li>多个单词使用短横线 <strong>-</strong> 分隔</li>\n</ol>\n<h4 id=\"vue文件\"><a class=\"header-anchor\" href=\"#vue文件\" aria-hidden=\"true\">#</a> .vue文件</h4>\n<ol>\n<li>单词<strong>大写</strong>开头 (PascalCase)</li>\n<li>vue文件代表页面(路由)的名字</li>\n<li>一般需要放在模块文件夹下</li>\n<li>特殊页面可以以单文件形式直接放在views目录下，如 Login.vue, 404.vue</li>\n<li>一般用两个单词描述，开头为所属模块名 (UserDetail, PlanList)</li>\n<li>以Item为结尾一般用于组件</li>\n</ol>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token comment\">// good</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">-</span> views\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> layout\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> plan\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> user\n        <span class=\"token operator\">|</span><span class=\"token operator\">-</span> UserDetail<span class=\"token punctuation\">.</span>vue\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> data<span class=\"token operator\">-</span>mgmt\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> Login<span class=\"token punctuation\">.</span>vue\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> <span class=\"token number\">404.</span>vue\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token operator\">|</span><span class=\"token operator\">-</span> views\n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> userPage   \n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> gooditemlist \n      <span class=\"token operator\">|</span><span class=\"token operator\">-</span> Car\n         <span class=\"token operator\">|</span><span class=\"token operator\">--</span> car<span class=\"token punctuation\">.</span>vue\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"props命名\"><a class=\"header-anchor\" href=\"#props命名\" aria-hidden=\"true\">#</a> props命名</h3>\n<blockquote>\n<p>在声明 prop 的时候，其命名应该始终使用 camelCase，而在模板和 JSX 中应该始终使用 kebab-case。————Vue风格指南</p>\n</blockquote>\n</ContentSlotsDistributor>\n",null]}